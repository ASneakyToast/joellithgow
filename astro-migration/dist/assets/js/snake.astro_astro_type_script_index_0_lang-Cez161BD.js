var l=Object.defineProperty;var d=(r,e,t)=>e in r?l(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var a=(r,e,t)=>d(r,typeof e!="symbol"?e+"":e,t);class g{constructor(){a(this,"config");a(this,"canvas");a(this,"ctx");a(this,"gameState");a(this,"snake");a(this,"direction");a(this,"nextDirection");a(this,"food");a(this,"score");a(this,"highScore");a(this,"level");a(this,"foodsEaten");a(this,"gameLoop");a(this,"currentSpeed");a(this,"tileCount");a(this,"lastTouchX");a(this,"lastTouchY");this.config={gridSize:20,baseSpeed:120,speedIncrement:10,foodsPerLevel:5},this.canvas=document.getElementById("gameCanvas"),this.ctx=this.canvas.getContext("2d"),this.gameState="menu",this.snake=[],this.direction={x:0,y:0},this.nextDirection={x:0,y:0},this.food={x:0,y:0},this.score=0,this.highScore=0,this.level=1,this.foodsEaten=0,this.gameLoop=null,this.currentSpeed=this.config.baseSpeed,this.tileCount=0,this.lastTouchX=null,this.lastTouchY=null,this.init()}init(){this.setupCanvas(),this.loadHighScore(),this.updateHighScoreDisplay(),this.setupEventListeners(),this.showMenu(),this.initThemeIntegration()}initThemeIntegration(){let e=localStorage.getItem("portfolio-theme")||"default";e==="forest"&&(e="default",localStorage.setItem("portfolio-theme","default")),document.documentElement.setAttribute("data-theme",e);const t=document.getElementById("themeToggle"),n=document.getElementById("themeMenuToggle");[t,n].forEach(i=>{i&&i.addEventListener("click",()=>{this.cycleTheme()})})}cycleTheme(){const e=["default","cyber","ocean","sunset","minimal","neon"],t=document.documentElement.getAttribute("data-theme")||"default",i=(e.indexOf(t)+1)%e.length,o=e[i];document.documentElement.setAttribute("data-theme",o),localStorage.setItem("portfolio-theme",o),setTimeout(()=>{(this.gameState==="playing"||this.gameState==="paused")&&this.draw()},100)}getGameColors(){const e=getComputedStyle(document.documentElement);return{background:e.getPropertyValue("--game-canvas-bg").trim(),snakeHead:e.getPropertyValue("--game-snake-head").trim(),snakeBody:e.getPropertyValue("--game-snake-body").trim(),food:e.getPropertyValue("--game-food").trim(),gridLines:e.getPropertyValue("--game-grid-lines").trim()}}setupCanvas(){const e=()=>{const t=window.innerWidth*.9,n=window.innerHeight*.8,i=Math.min(t,n),o=Math.floor(i/this.config.gridSize)*this.config.gridSize;this.canvas.width=o,this.canvas.height=o,this.tileCount=o/this.config.gridSize,(this.gameState==="playing"||this.gameState==="paused")&&this.draw()};e(),window.addEventListener("resize",e)}setupEventListeners(){document.addEventListener("keydown",e=>this.handleKeyPress(e)),this.canvas.addEventListener("touchstart",e=>this.handleTouchStart(e),{passive:!1}),this.canvas.addEventListener("touchmove",e=>this.handleTouchMove(e),{passive:!1}),this.canvas.addEventListener("touchend",e=>this.handleTouchEnd(e),{passive:!1}),document.querySelectorAll(".control-btn[data-direction]").forEach(e=>{e.addEventListener("click",()=>{const t=e.dataset.direction;this.gameState==="playing"&&this.changeDirection(t)})}),document.getElementById("mobilePause")?.addEventListener("click",()=>this.togglePause()),document.getElementById("startGame")?.addEventListener("click",()=>this.startGame()),document.getElementById("showInstructions")?.addEventListener("click",()=>this.showInstructions()),document.getElementById("backToMenu")?.addEventListener("click",()=>this.showMenu()),document.getElementById("backToSiteFromMenu")?.addEventListener("click",()=>{window.location.href="/"}),document.getElementById("resumeGame")?.addEventListener("click",()=>this.resumeGame()),document.getElementById("restartGame")?.addEventListener("click",()=>{this.hideAllOverlays(),this.startGame()}),document.getElementById("quitToMenu")?.addEventListener("click",()=>{this.stopGameLoop(),this.showMenu()}),document.getElementById("backToSiteFromPause")?.addEventListener("click",()=>{window.location.href="/"}),document.getElementById("playAgain")?.addEventListener("click",()=>{this.hideAllOverlays(),this.startGame()}),document.getElementById("backToMenuFromGameOver")?.addEventListener("click",()=>this.showMenu()),document.getElementById("backToSiteFromGameOver")?.addEventListener("click",()=>{window.location.href="/"})}handleKeyPress(e){if(e.key==="Escape"){e.preventDefault(),this.gameState==="playing"?confirm("Leave the game and return to homepage?")&&(window.location.href="/"):window.location.href="/";return}if(!(this.gameState==="menu"||this.gameState==="gameover")){if(e.key===" "||e.key.toLowerCase()==="p"){e.preventDefault(),this.togglePause();return}if(this.gameState==="playing")switch(e.key.toLowerCase()){case"arrowup":case"w":this.changeDirection("up");break;case"arrowdown":case"s":this.changeDirection("down");break;case"arrowleft":case"a":this.changeDirection("left");break;case"arrowright":case"d":this.changeDirection("right");break}}}handleTouchStart(e){e.preventDefault();const t=e.touches[0];this.lastTouchX=t.clientX,this.lastTouchY=t.clientY}handleTouchMove(e){e.preventDefault()}handleTouchEnd(e){if(e.preventDefault(),!this.lastTouchX||!this.lastTouchY||this.gameState!=="playing")return;const t=e.changedTouches[0],n=t.clientX-this.lastTouchX,i=t.clientY-this.lastTouchY;Math.abs(n)>Math.abs(i)?n>30?this.changeDirection("right"):n<-30&&this.changeDirection("left"):i>30?this.changeDirection("down"):i<-30&&this.changeDirection("up"),this.lastTouchX=null,this.lastTouchY=null}changeDirection(e){switch(e){case"up":this.direction.y===0&&(this.nextDirection={x:0,y:-1});break;case"down":this.direction.y===0&&(this.nextDirection={x:0,y:1});break;case"left":this.direction.x===0&&(this.nextDirection={x:-1,y:0});break;case"right":this.direction.x===0&&(this.nextDirection={x:1,y:0});break}}showMenu(){this.gameState="menu",this.hideAllOverlays(),document.getElementById("menuOverlay")?.classList.remove("hidden"),this.clearCanvas()}showInstructions(){this.hideAllOverlays(),document.getElementById("instructionsOverlay")?.classList.remove("hidden")}togglePause(){this.gameState==="playing"?this.pauseGame():this.gameState==="paused"&&this.resumeGame()}pauseGame(){this.gameState="paused",this.stopGameLoop(),document.getElementById("pauseOverlay")?.classList.remove("hidden")}resumeGame(){this.gameState="playing",this.hideAllOverlays(),this.startGameLoop()}hideAllOverlays(){["menuOverlay","instructionsOverlay","pauseOverlay","gameOverOverlay"].forEach(t=>{document.getElementById(t)?.classList.add("hidden")})}startGame(){this.hideAllOverlays(),this.resetGame(),this.gameState="playing",this.startGameLoop()}resetGame(){const e=Math.floor(this.tileCount/2),t=Math.floor(this.tileCount/2);this.snake=[{x:e,y:t}],this.direction={x:0,y:0},this.nextDirection={x:0,y:0},this.score=0,this.level=1,this.foodsEaten=0,this.currentSpeed=this.config.baseSpeed,this.updateScore(),this.updateLevel(),this.generateFood()}startGameLoop(){this.stopGameLoop(),this.gameLoop=setInterval(()=>this.update(),this.currentSpeed)}stopGameLoop(){this.gameLoop&&(clearInterval(this.gameLoop),this.gameLoop=null)}update(){if(this.direction={...this.nextDirection},this.direction.x!==0||this.direction.y!==0){const e={...this.snake[0]};if(e.x+=this.direction.x,e.y+=this.direction.y,e.x<0||e.x>=this.tileCount||e.y<0||e.y>=this.tileCount){this.endGame();return}for(let t of this.snake)if(e.x===t.x&&e.y===t.y){this.endGame();return}this.snake.unshift(e),e.x===this.food.x&&e.y===this.food.y?this.eatFood():this.snake.pop()}this.draw()}eatFood(){this.score++,this.foodsEaten++,this.updateScore(),this.foodsEaten>=this.config.foodsPerLevel&&this.levelUp(),this.generateFood()}levelUp(){this.level++,this.foodsEaten=0,this.currentSpeed=Math.max(50,this.config.baseSpeed-(this.level-1)*this.config.speedIncrement),this.updateLevel(),this.gameState==="playing"&&this.startGameLoop()}generateFood(){do this.food={x:Math.floor(Math.random()*this.tileCount),y:Math.floor(Math.random()*this.tileCount)};while(this.snake.some(e=>e.x===this.food.x&&e.y===this.food.y))}updateScore(){const e=document.getElementById("currentScore");e&&(e.textContent=this.score.toString())}updateLevel(){const e=document.getElementById("level");e&&(e.textContent=this.level.toString())}loadHighScore(){const e=localStorage.getItem("snakeHighScore");e&&(this.highScore=parseInt(e,10))}saveHighScore(){localStorage.setItem("snakeHighScore",this.highScore.toString())}updateHighScoreDisplay(){const e=document.getElementById("highScore");e&&(e.textContent=this.highScore.toString())}endGame(){this.gameState="gameover",this.stopGameLoop();const e=document.getElementById("finalScore"),t=document.getElementById("highScoreMessage");this.score>this.highScore?(this.highScore=this.score,this.saveHighScore(),this.updateHighScoreDisplay(),t&&(t.textContent="New High Score!")):t&&(t.textContent=""),e&&(e.textContent=this.score.toString()),document.getElementById("gameOverOverlay")?.classList.remove("hidden")}draw(){this.clearCanvas(),this.drawGrid(),this.drawFood(),this.drawSnake()}clearCanvas(){const e=this.getGameColors();this.ctx.fillStyle=e.background,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}drawGrid(){const e=this.getGameColors();this.ctx.strokeStyle=e.gridLines,this.ctx.lineWidth=1;for(let t=0;t<=this.tileCount;t++){const n=t*this.config.gridSize;this.ctx.beginPath(),this.ctx.moveTo(n,0),this.ctx.lineTo(n,this.canvas.height),this.ctx.stroke(),this.ctx.beginPath(),this.ctx.moveTo(0,n),this.ctx.lineTo(this.canvas.width,n),this.ctx.stroke()}}drawSnake(){const e=this.getGameColors();this.snake.forEach((t,n)=>{const i=t.x*this.config.gridSize,o=t.y*this.config.gridSize,h=this.config.gridSize-2;if(n===0?(this.ctx.fillStyle=e.snakeHead,this.ctx.shadowBlur=10,this.ctx.shadowColor=e.snakeHead):(this.ctx.fillStyle=e.snakeBody,this.ctx.shadowBlur=0),this.ctx.fillRect(i+1,o+1,h,h),n===0&&(this.direction.x!==0||this.direction.y!==0)){this.ctx.fillStyle="#000";const s=3,c=6;this.direction.x===1?(this.ctx.fillRect(i+h-c,o+5,s,s),this.ctx.fillRect(i+h-c,o+h-8,s,s)):this.direction.x===-1?(this.ctx.fillRect(i+c-s,o+5,s,s),this.ctx.fillRect(i+c-s,o+h-8,s,s)):this.direction.y===-1?(this.ctx.fillRect(i+5,o+c-s,s,s),this.ctx.fillRect(i+h-8,o+c-s,s,s)):this.direction.y===1&&(this.ctx.fillRect(i+5,o+h-c,s,s),this.ctx.fillRect(i+h-8,o+h-c,s,s))}}),this.ctx.shadowBlur=0}drawFood(){const e=this.getGameColors(),t=this.food.x*this.config.gridSize,n=this.food.y*this.config.gridSize,i=this.config.gridSize-2,o=t+this.config.gridSize/2,h=n+this.config.gridSize/2;this.ctx.shadowBlur=15,this.ctx.shadowColor=e.food,this.ctx.fillStyle=e.food,this.ctx.beginPath(),this.ctx.arc(o,h,i/2,0,Math.PI*2),this.ctx.fill();const s=Math.sin(Date.now()*.005)*.1+.9;this.ctx.globalAlpha=s,this.ctx.beginPath(),this.ctx.arc(o,h,i/2.5,0,Math.PI*2),this.ctx.fill(),this.ctx.globalAlpha=1,this.ctx.shadowBlur=0}}new g;
