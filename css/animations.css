/* animations.css - Transitions, Transforms, and Animations */

/* Global Transition Base */
* {
    transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
}

/* Floating Elements Animation */
@keyframes float {
    0%, 100% { transform: translateY(0px) rotate(12deg); }
    50% { transform: translateY(-25px) rotate(12deg); }
}

.floating-element {
    animation: float 8s ease-in-out infinite;
}

.floating-element:nth-child(2) {
    animation-delay: -2s;
}

.floating-element:nth-child(3) {
    animation-delay: -4s;
}

/* Floating Element States */
.floating-element:hover {
    transform: scale(1.05);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.floating-element.dragging {
    cursor: grabbing;
    z-index: 1000;
    animation: none;
    transform: scale(1.1);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
}

/* Navigation Hover Effects */
.nav-links a:hover {
    background: var(--accent-primary);
    color: var(--text-light);
    transform: skew(-3deg);
    border: 2px solid var(--bg-dark);
}

/* Button Hover Effects */
.cta-button:hover {
    transform: rotate(0deg) scale(1.05);
    background: var(--accent-secondary);
    box-shadow: 8px 8px 0px var(--accent-tertiary);
}

.theme-control:hover {
    transform: rotate(0deg) scale(1.05);
    background: var(--accent-secondary);
    box-shadow: 8px 8px 0px var(--accent-tertiary);
}

/* Project Card Hover */
.project-card:hover {
    transform: scale(1.03) rotate(1deg);
    box-shadow: 12px 12px 0px var(--accent-secondary);
}

/* Contact Method Hover */
.contact-method:hover {
    transform: scale(1.1) rotate(3deg);
    background: var(--accent-primary);
    box-shadow: 8px 8px 0px var(--accent-secondary);
}

.contact-method:nth-child(2):hover {
    background: var(--accent-primary);
}

.contact-method:nth-child(3):hover {
    background: var(--accent-secondary);
    color: var(--text-light);
}

/* Process Navigation Hover */
.process-nav-item:hover {
    background: var(--bg-primary);
    margin: 0 -10px;
    padding: 20px 10px;
}

.process-nav-item.active {
    background: var(--accent-primary);
    color: var(--text-light);
    margin: 0 -10px;
    padding: 20px 10px;
    transform: skew(-2deg);
}

.process-nav-item.active .nav-step-icon {
    background: var(--text-light);
    transform: rotate(5deg);
}

.process-nav-item.active .nav-step-icon svg {
    fill: var(--accent-primary);
}

/* Process Step Content Animations */
.process-step-content {
    transition: all 0.6s ease;
}

.process-step-content.active {
    opacity: 1;
    transform: translateY(0);
}

/* Step Content Icon Hover */
.step-content-icon:hover {
    transform: rotate(-5deg) scale(1.1);
}

/* Theme Modal Animations */
.theme-modal-overlay {
    transition: opacity 0.3s ease, visibility 0.3s ease;
}

.theme-modal {
    transform: scale(0.8);
    transition: transform 0.3s ease;
}

.theme-modal-overlay.show .theme-modal {
    transform: scale(1);
}

/* Theme Modal Close Hover */
.theme-modal-close:hover {
    transform: rotate(90deg) scale(1.1);
    background: var(--accent-secondary);
}

/* Theme Option Hover */
.theme-option:hover {
    transform: rotate(0deg) scale(1.05);
    border-color: var(--accent-primary);
    box-shadow: 4px 4px 0px var(--accent-secondary);
}

.theme-option:hover .theme-color {
    transform: scale(1.1);
    border-color: white;
}

.theme-option.preview {
    border-color: var(--accent-tertiary);
}

/* Case Study Modal Animations */
.modal-overlay {
    transition: all 0.3s ease;
}

.modal-content {
    transform: scale(0.8) rotate(-2deg);
    transition: all 0.3s ease;
}

.modal-overlay.show .modal-content {
    transform: scale(1) rotate(0deg);
}

/* Modal Close Hover */
.modal-close:hover {
    transform: rotate(90deg) scale(1.1);
    background: var(--accent-secondary);
}

/* Stat Item Rotations */
.stat-item {
    transition: transform 0.3s ease;
}

.stat-item:hover {
    transform: rotate(0deg) scale(1.05);
}

/* Skill Category Hover */
.skill-category:hover {
    transform: rotate(0deg) scale(1.02);
    box-shadow: 6px 6px 0px var(--accent-secondary);
}

/* Skill Item Hover */
.skill-item:hover {
    transform: scale(1.1);
    background: var(--accent-primary);
    color: var(--text-light);
}

/* Tech Tag Hover */
.tech-tag:hover {
    transform: scale(1.1);
    background: var(--accent-secondary);
    color: var(--text-light);
}

/* Navigation Link Active State */
.nav-links a.active {
    background: var(--accent-primary);
    color: var(--text-light);
    transform: skew(-3deg);
    border: 2px solid var(--bg-dark);
}

/* Scroll Animations */
@keyframes slideInLeft {
    from {
        transform: translateX(-100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideInRight {
    from {
        transform: translateX(100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideInUp {
    from {
        transform: translateY(50px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

/* Scroll-triggered animations */
.animate-on-scroll {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.6s ease, transform 0.6s ease;
}

.animate-on-scroll.in-view {
    opacity: 1;
    transform: translateY(0);
}

.animate-slide-left {
    animation: slideInLeft 0.8s ease-out;
}

.animate-slide-right {
    animation: slideInRight 0.8s ease-out;
}

.animate-slide-up {
    animation: slideInUp 0.8s ease-out;
}

.animate-fade-in {
    animation: fadeIn 0.8s ease-out;
}

/* Loading States */
@keyframes pulse {
    0%, 100% {
        opacity: 1;
    }
    50% {
        opacity: 0.5;
    }
}

.loading {
    animation: pulse 2s infinite;
}

/* Typing Effect */
@keyframes typing {
    from { width: 0; }
    to { width: 100%; }
}

@keyframes blink {
    from, to { border-color: transparent; }
    50% { border-color: var(--accent-primary); }
}

.typing-effect {
    overflow: hidden;
    border-right: 2px solid var(--accent-primary);
    white-space: nowrap;
    animation: typing 3s steps(40, end), blink 1s infinite;
}

/* Bounce Animation */
@keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
    }
    40% {
        transform: translateY(-10px);
    }
    60% {
        transform: translateY(-5px);
    }
}

.bounce {
    animation: bounce 2s infinite;
}

/* Shake Animation */
@keyframes shake {
    0%, 100% { transform: translateX(0); }
    10%, 30%, 50%, 70%, 90% { transform: translateX(-2px); }
    20%, 40%, 60%, 80% { transform: translateX(2px); }
}

.shake {
    animation: shake 0.5s ease-in-out;
}

/* Rotate Animation */
@keyframes rotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

.rotate {
    animation: rotate 2s linear infinite;
}

/* Scale Animation */
@keyframes scale {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.1); }
}

.scale {
    animation: scale 2s ease-in-out infinite;
}

/* Glitch Effect */
@keyframes glitch {
    0%, 100% { transform: translate(0); }
    20% { transform: translate(-2px, 2px); }
    40% { transform: translate(-2px, -2px); }
    60% { transform: translate(2px, 2px); }
    80% { transform: translate(2px, -2px); }
}

.glitch {
    animation: glitch 0.3s ease-in-out infinite;
}

/* Smooth Scroll Behavior */
html {
    scroll-behavior: smooth;
}

/* Focus States */
button:focus,
a:focus,
input:focus {
    outline: 2px solid var(--accent-primary);
    outline-offset: 2px;
}

/* Transition Delays */
.delay-1 { transition-delay: 0.1s; }
.delay-2 { transition-delay: 0.2s; }
.delay-3 { transition-delay: 0.3s; }
.delay-4 { transition-delay: 0.4s; }
.delay-5 { transition-delay: 0.5s; }

/* Easing Functions */
.ease-in { transition-timing-function: ease-in; }
.ease-out { transition-timing-function: ease-out; }
.ease-in-out { transition-timing-function: ease-in-out; }

/* Transform Utilities */
.transform { transform: translateZ(0); }
.scale-95 { transform: scale(0.95); }
.scale-100 { transform: scale(1); }
.scale-105 { transform: scale(1.05); }
.scale-110 { transform: scale(1.1); }

.rotate-1 { transform: rotate(1deg); }
.rotate-2 { transform: rotate(2deg); }
.rotate-3 { transform: rotate(3deg); }
.rotate-6 { transform: rotate(6deg); }
.rotate-12 { transform: rotate(12deg); }
.rotate-45 { transform: rotate(45deg); }
.rotate-90 { transform: rotate(90deg); }
.rotate-180 { transform: rotate(180deg); }

.-rotate-1 { transform: rotate(-1deg); }
.-rotate-2 { transform: rotate(-2deg); }
.-rotate-3 { transform: rotate(-3deg); }
.-rotate-6 { transform: rotate(-6deg); }
.-rotate-12 { transform: rotate(-12deg); }

/* Skew Utilities */
.skew-x-1 { transform: skewX(1deg); }
.skew-x-2 { transform: skewX(2deg); }
.skew-x-3 { transform: skewX(3deg); }
.skew-y-1 { transform: skewY(1deg); }
.skew-y-2 { transform: skewY(2deg); }
.skew-y-3 { transform: skewY(3deg); }

.-skew-x-1 { transform: skewX(-1deg); }
.-skew-x-2 { transform: skewX(-2deg); }
.-skew-x-3 { transform: skewX(-3deg); }
.-skew-y-1 { transform: skewY(-1deg); }
.-skew-y-2 { transform: skewY(-2deg); }
.-skew-y-3 { transform: skewY(-3deg); }

/* Translate Utilities */
.translate-x-1 { transform: translateX(0.25rem); }
.translate-x-2 { transform: translateX(0.5rem); }
.translate-x-3 { transform: translateX(0.75rem); }
.translate-y-1 { transform: translateY(0.25rem); }
.translate-y-2 { transform: translateY(0.5rem); }
.translate-y-3 { transform: translateY(0.75rem); }

.-translate-x-1 { transform: translateX(-0.25rem); }
.-translate-x-2 { transform: translateX(-0.5rem); }
.-translate-x-3 { transform: translateX(-0.75rem); }
.-translate-y-1 { transform: translateY(-0.25rem); }
.-translate-y-2 { transform: translateY(-0.5rem); }
.-translate-y-3 { transform: translateY(-0.75rem); }

/* Opacity Utilities */
.opacity-0 { opacity: 0; }
.opacity-25 { opacity: 0.25; }
.opacity-50 { opacity: 0.5; }
.opacity-75 { opacity: 0.75; }
.opacity-100 { opacity: 1; }

/* Visibility Utilities */
.visible { visibility: visible; }
.invisible { visibility: hidden; }

/* Pointer Events */
.pointer-events-none { pointer-events: none; }
.pointer-events-auto { pointer-events: auto; }