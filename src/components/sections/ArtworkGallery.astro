---
import type { Artwork } from '@content/config';

interface Props {
  artworks: Artwork[];
}

const { artworks } = Astro.props;

// Collect all images from all artworks
const allImages = artworks.flatMap(artwork => {
  if (!artwork.images || artwork.images.length === 0) return [];
  
  return artwork.images.map(image => ({
    ...image,
    artworkTitle: artwork.title,
    artworkId: artwork.id,
  }));
});

// If no images available, don't render the gallery
if (allImages.length === 0) {
  console.log('⚠️ No images available for gallery - component will not render');
}

// Split images into two rows for visual variety
const midpoint = Math.ceil(allImages.length / 2);
const topRowImages = allImages.slice(0, midpoint);
const bottomRowImages = allImages.slice(midpoint);
---

{allImages.length > 0 && (
  <section class="artwork-gallery">
    <div class="container">
      <h2 class="gallery-title">Gallery Overview</h2>
      <p class="gallery-description">
        A visual journey through all artworks in the collection
      </p>
      
      <div class="gallery-wrapper">
        <!-- Top Row - Taller Images -->
        <div class="gallery-row gallery-row-top">
          {topRowImages.map((image) => (
            <div class="gallery-item gallery-item-tall">
              <img 
                src={image.src}
                alt={image.alt}
                loading="lazy"
                class="gallery-image"
              />
              <div class="image-overlay">
                <span class="artwork-title">{image.artworkTitle}</span>
                <span class="image-caption">{image.caption}</span>
              </div>
            </div>
          ))}
        </div>
        
        <!-- Bottom Row - Shorter Images -->
        <div class="gallery-row gallery-row-bottom">
          {bottomRowImages.map((image) => (
            <div class="gallery-item gallery-item-short">
              <img 
                src={image.src}
                alt={image.alt}
                loading="lazy"
                class="gallery-image"
              />
              <div class="image-overlay">
                <span class="artwork-title">{image.artworkTitle}</span>
                <span class="image-caption">{image.caption}</span>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>
)}

<style>
  .artwork-gallery {
    padding: 80px 0;
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    margin-bottom: 40px;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .gallery-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 15px;
    text-align: center;
    background: linear-gradient(135deg, #2c3e50, #3498db);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .gallery-description {
    font-size: 1.1rem;
    color: #666;
    text-align: center;
    margin-bottom: 50px;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .gallery-wrapper {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .gallery-row {
    display: flex;
    gap: 20px;
    overflow-x: auto;
    padding: 10px 0;
    scroll-behavior: smooth;
  }

  .gallery-row::-webkit-scrollbar {
    height: 8px;
  }

  .gallery-row::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.1);
    border-radius: 4px;
  }

  .gallery-row::-webkit-scrollbar-thumb {
    background: rgba(52, 152, 219, 0.6);
    border-radius: 4px;
  }

  .gallery-row::-webkit-scrollbar-thumb:hover {
    background: rgba(52, 152, 219, 0.8);
  }

  .gallery-item {
    position: relative;
    flex-shrink: 0;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    cursor: pointer;
  }

  .gallery-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
  }

  .gallery-item-tall {
    width: 300px;
    height: 350px;
  }

  .gallery-item-short {
    width: 280px;
    height: 220px;
  }

  .gallery-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .gallery-item:hover .gallery-image {
    transform: scale(1.05);
  }

  .image-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(transparent, rgba(0, 0, 0, 0.8));
    color: white;
    padding: 20px 15px 15px;
    transform: translateY(100%);
    transition: transform 0.3s ease;
    display: flex;
    flex-direction: column;
    gap: 5px;
  }

  .gallery-item:hover .image-overlay {
    transform: translateY(0);
  }

  .artwork-title {
    font-weight: 600;
    font-size: 0.95rem;
  }

  .image-caption {
    font-size: 0.8rem;
    opacity: 0.9;
  }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .artwork-gallery {
      padding: 60px 0;
    }

    .gallery-title {
      font-size: 2rem;
    }

    .gallery-wrapper {
      gap: 15px;
    }

    .gallery-row {
      gap: 15px;
    }

    .gallery-item-tall {
      width: 250px;
      height: 300px;
    }

    .gallery-item-short {
      width: 230px;
      height: 180px;
    }

    .image-overlay {
      transform: translateY(0);
      background: linear-gradient(transparent, rgba(0, 0, 0, 0.7));
    }
  }

  @media (max-width: 480px) {
    .gallery-item-tall {
      width: 200px;
      height: 250px;
    }

    .gallery-item-short {
      width: 180px;
      height: 150px;
    }
  }
</style>