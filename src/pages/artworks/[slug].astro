---
import BaseLayout from '@components/common/BaseLayout.astro';
import Navigation from '@components/common/Navigation.astro';
import { getAllArtworks, getArtworkById } from '@features/artworks';
import type { Artwork } from '@content/config';

export async function getStaticPaths() {
  const allArtworks = await getAllArtworks();
  
  return allArtworks.map((artwork) => ({
    params: { slug: artwork.id },
    props: { artwork },
  }));
}

type Props = {
  artwork: Artwork;
};

const { artwork } = Astro.props;

const pageTitle = `${artwork.title} - Joel Lithgow Artworks`;
const pageDescription = artwork.description;
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <!-- Skip to main content link for screen readers -->
  <a href="#main-content" class="skip-link" aria-label="Skip to main content">Skip to main content</a>
  
  <!-- Navigation Component -->
  <Navigation />

  <!-- Main Content -->
  <main id="main-content" class="artwork-detail-main">
    <!-- Back Link -->
    <div class="container">
      <nav class="breadcrumb">
        <a href="/artworks" class="back-link">‚Üê Back to Artworks</a>
      </nav>
    </div>

    <!-- Artwork Header -->
    <section class="artwork-header">
      <div class="container">
        <div class="artwork-header-content">
          <div class="artwork-meta">
            <h1 class="artwork-title">{artwork.title}</h1>
            <p class="project-context">{artwork.projectTitle}</p>
            <div class="artwork-details">
              <span class="medium">{artwork.medium}</span>
              {artwork.dimensions && <span class="dimensions">{artwork.dimensions}</span>}
              <span class="date">{new Date(artwork.creationDate).getFullYear()}</span>
            </div>
            {artwork.collaborators && artwork.collaborators.length > 0 && (
              <p class="collaborators">
                Collaboration with: {artwork.collaborators.join(', ')}
              </p>
            )}
          </div>
        </div>
      </div>
    </section>

    <!-- Image Gallery -->
    <section class="image-gallery">
      <div class="container">
        {artwork.images && artwork.images.length > 0 ? (
          <div class="main-image">
            <img 
              src={artwork.images[0].src} 
              alt={artwork.images[0].alt}
              class="primary-image"
            />
            <p class="image-caption">{artwork.images[0].caption}</p>
          </div>
        ) : (
          <div class="no-image-section">
            <div class="no-image-placeholder">No images available for this artwork</div>
          </div>
        )}
        
        {artwork.images && artwork.images.length > 1 && (
          <div class="additional-images">
            <h3 class="section-title">Additional Views</h3>
            <div class="image-grid">
              {artwork.images.slice(1).map((image, index) => (
                <div class="image-item" key={index}>
                  <img 
                    src={image.src} 
                    alt={image.alt}
                    loading="lazy"
                  />
                  <div class="image-info">
                    <span class="image-type">{image.type}</span>
                    <p class="image-caption">{image.caption}</p>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}
      </div>
    </section>

    <!-- Artwork Content -->
    <section class="artwork-content">
      <div class="container">
        <div class="content-grid">
          <!-- Main Description -->
          <div class="main-content">
            <h2 class="section-title">About This Work</h2>
            <p class="description">{artwork.description}</p>
            
            {artwork.artistStatement && (
              <div class="artist-statement">
                <h3 class="subsection-title">Artist Statement</h3>
                <p>{artwork.artistStatement}</p>
              </div>
            )}
            
            {artwork.processNotes && (
              <div class="process-notes">
                <h3 class="subsection-title">Process</h3>
                <p>{artwork.processNotes}</p>
              </div>
            )}
            
            {artwork.inspiration && (
              <div class="inspiration">
                <h3 class="subsection-title">Inspiration</h3>
                <p>{artwork.inspiration}</p>
              </div>
            )}
          </div>

          <!-- Sidebar Details -->
          <div class="artwork-sidebar">
            <div class="details-card">
              <h3 class="card-title">Technical Details</h3>
              
              {artwork.materials && artwork.materials.length > 0 && (
                <div class="detail-group">
                  <h4>Materials</h4>
                  <ul>
                    {artwork.materials.map(material => (
                      <li key={material}>{material}</li>
                    ))}
                  </ul>
                </div>
              )}
              
              {artwork.techniques && artwork.techniques.length > 0 && (
                <div class="detail-group">
                  <h4>Techniques</h4>
                  <ul>
                    {artwork.techniques.map(technique => (
                      <li key={technique}>{technique}</li>
                    ))}
                  </ul>
                </div>
              )}
              
              {artwork.series && (
                <div class="detail-group">
                  <h4>Series</h4>
                  <p>{artwork.series}</p>
                </div>
              )}
              
              {artwork.technicalNotes && (
                <div class="detail-group">
                  <h4>Technical Notes</h4>
                  <p>{artwork.technicalNotes}</p>
                </div>
              )}
            </div>

            {artwork.exhibitions && artwork.exhibitions.length > 0 && (
              <div class="details-card">
                <h3 class="card-title">Exhibition History</h3>
                {artwork.exhibitions.map((exhibition, index) => (
                  <div class="exhibition-item" key={index}>
                    <h4>{exhibition.name}</h4>
                    <p>{exhibition.location}</p>
                    <p class="exhibition-date">{exhibition.date}</p>
                    {exhibition.type && (
                      <span class="exhibition-type">{exhibition.type} show</span>
                    )}
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>
      </div>
    </section>

    <!-- Project Context -->
    <section class="project-context-section">
      <div class="container">
        <div class="project-info">
          <h2 class="section-title">Project: {artwork.projectTitle}</h2>
          <p class="project-description">{artwork.projectDescription}</p>
        </div>
      </div>
    </section>
  </main>
</BaseLayout>

<style>
  .artwork-detail-main {
    min-height: 100vh;
    padding-top: 80px;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .breadcrumb {
    padding: 20px 0;
  }

  .back-link {
    color: #3498db;
    text-decoration: none;
    font-weight: 500;
    transition: color 0.3s ease;
  }

  .back-link:hover {
    color: #2980b9;
  }

  .artwork-header {
    padding: 40px 0 60px;
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    margin-bottom: 60px;
  }

  .artwork-title {
    font-size: 3rem;
    font-weight: 700;
    margin-bottom: 10px;
    background: linear-gradient(135deg, #2c3e50, #3498db);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .project-context {
    font-size: 1.2rem;
    color: #666;
    margin-bottom: 20px;
    font-weight: 500;
  }

  .artwork-details {
    display: flex;
    gap: 20px;
    margin-bottom: 15px;
    flex-wrap: wrap;
  }

  .artwork-details span {
    background: white;
    padding: 8px 16px;
    border-radius: 20px;
    font-size: 0.9rem;
    color: #555;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .collaborators {
    color: #3498db;
    font-weight: 500;
    font-style: italic;
  }

  .image-gallery {
    margin-bottom: 80px;
  }

  .main-image {
    margin-bottom: 60px;
    text-align: center;
  }

  .primary-image {
    max-width: 100%;
    height: auto;
    border-radius: 12px;
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
    margin-bottom: 20px;
  }

  .image-caption {
    font-style: italic;
    color: #666;
    max-width: 600px;
    margin: 0 auto;
    line-height: 1.5;
  }

  .additional-images {
    margin-top: 60px;
  }

  .section-title {
    font-size: 2rem;
    font-weight: 600;
    margin-bottom: 30px;
    color: #2c3e50;
  }

  .image-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 30px;
  }

  .image-item img {
    width: 100%;
    height: 200px;
    object-fit: cover;
    border-radius: 8px;
    margin-bottom: 15px;
  }

  .image-type {
    background: #3498db;
    color: white;
    padding: 4px 12px;
    border-radius: 12px;
    font-size: 0.8rem;
    font-weight: 500;
    text-transform: uppercase;
  }

  .artwork-content {
    margin-bottom: 80px;
  }

  .content-grid {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 60px;
  }

  .description {
    font-size: 1.1rem;
    line-height: 1.7;
    color: #444;
    margin-bottom: 40px;
  }

  .subsection-title {
    font-size: 1.3rem;
    font-weight: 600;
    margin-bottom: 15px;
    color: #2c3e50;
  }

  .artist-statement,
  .process-notes,
  .inspiration {
    margin-bottom: 40px;
  }

  .artist-statement p,
  .process-notes p,
  .inspiration p {
    line-height: 1.6;
    color: #555;
  }

  .artwork-sidebar {
    display: flex;
    flex-direction: column;
    gap: 30px;
  }

  .details-card {
    background: white;
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  }

  .card-title {
    font-size: 1.2rem;
    font-weight: 600;
    margin-bottom: 20px;
    color: #2c3e50;
  }

  .detail-group {
    margin-bottom: 25px;
  }

  .detail-group h4 {
    font-size: 1rem;
    font-weight: 600;
    margin-bottom: 8px;
    color: #3498db;
  }

  .detail-group ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .detail-group li {
    padding: 4px 0;
    color: #555;
  }

  .detail-group p {
    color: #555;
    line-height: 1.5;
  }

  .exhibition-item {
    margin-bottom: 20px;
    padding-bottom: 20px;
    border-bottom: 1px solid #eee;
  }

  .exhibition-item:last-child {
    border-bottom: none;
    margin-bottom: 0;
  }

  .exhibition-item h4 {
    margin-bottom: 5px;
    color: #2c3e50;
  }

  .exhibition-date {
    color: #888;
    font-size: 0.9rem;
  }

  .exhibition-type {
    background: #e9ecef;
    padding: 2px 8px;
    border-radius: 10px;
    font-size: 0.8rem;
    color: #666;
  }

  .project-context-section {
    background: #f8f9fa;
    padding: 60px 0;
    margin-top: 60px;
  }

  .project-info {
    max-width: 800px;
  }

  .project-description {
    font-size: 1.1rem;
    line-height: 1.6;
    color: #555;
  }

  .skip-link {
    position: absolute;
    top: -40px;
    left: 6px;
    background: #000;
    color: white;
    padding: 8px;
    text-decoration: none;
    border-radius: 4px;
    z-index: 1000;
  }

  .skip-link:focus {
    top: 6px;
  }

  .no-image-placeholder, .no-image-section {
    width: 100%;
    height: 300px;
    background: #f8f9fa;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #666;
    font-style: italic;
    border-radius: 12px;
    border: 2px dashed #ddd;
    margin-bottom: 20px;
  }

  @media (max-width: 768px) {
    .artwork-title {
      font-size: 2.2rem;
    }
    
    .content-grid {
      grid-template-columns: 1fr;
      gap: 40px;
    }
    
    .artwork-details {
      justify-content: center;
    }
    
    .image-grid {
      grid-template-columns: 1fr;
    }
  }
</style>